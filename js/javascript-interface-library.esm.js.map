{"version":3,"file":"javascript-interface-library.esm.js","sources":["../src/javascript-interface-library.ts"],"sourcesContent":["//----------------------------------------------------------------------------//\n//                        JavaScript Interface Library                        //\n//----------------------------------------------------------------------------//\n\n/**** get a reference to the \"global\" object ****/\n\n  export const global = /*#__PURE__*/ Function('return this')()\n// see https://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\n\n//------------------------------------------------------------------------------\n//--                             Object Functions                             --\n//------------------------------------------------------------------------------\n// allow methods from Object.prototype to be applied to \"vanilla\" objects\n\n/**** Object_hasOwnProperty ****/\n\n  export function Object_hasOwnProperty (Value:Object, PropertyName:string):boolean {\n    return (\n      (Value == null) ||              // let this method crash like its original\n      ('hasOwnProperty' in Value) && (typeof Value.hasOwnProperty === 'function')\n      ? Value.hasOwnProperty(PropertyName)\n      : Object.prototype.hasOwnProperty.call(Value,PropertyName)\n    )\n  }\n\n/**** Object_isPrototypeOf ****/\n\n  export function Object_isPrototypeOf (Value:Object, Candidate:any):boolean {\n    return (\n      (Value == null) ||              // let this method crash like its original\n      ('isPrototypeOf' in Value) && (typeof Value.isPrototypeOf === 'function')\n      ? Value.isPrototypeOf(Candidate)\n      : Object.prototype.isPrototypeOf.call(Value,Candidate)\n    )\n  }\n\n/**** Object_propertyIsEnumerable ****/\n\n  export function Object_propertyIsEnumerable (Value:Object, PropertyName:string):boolean {\n    return (\n      (Value == null) ||              // let this method crash like its original\n      ('propertyIsEnumerable' in Value) && (typeof Value.propertyIsEnumerable === 'function')\n      ? Value.propertyIsEnumerable(PropertyName)\n      : Object.prototype.propertyIsEnumerable.call(Value,PropertyName)\n    )\n  }\n\n/**** Object_toString ****/\n\n  export function Object_toString (Value:Object):string {\n    return (\n      (Value == null) ||              // let this method crash like its original\n      ('toString' in Value) && (typeof Value.toString === 'function')\n      ? Value.toString()\n      : Object.prototype.toString.call(Value)\n    )\n  }\n\n/**** Object_toLocaleString ****/\n\n  export function Object_toLocaleString (Value:Object):string {\n    return (\n      (Value == null) ||              // let this method crash like its original\n      ('toLocaleString' in Value) && (typeof Value.toLocaleString === 'function')\n      ? Value.toLocaleString()\n      : Object.prototype.toString.call(Value)\n    ) // a missing \"toLocaleString\" method will crash Object.prototype.toLocaleString\n  }\n\n/**** Object_valueOf ****/\n\n  export function Object_valueOf (Value:Object):any {\n    return (\n      (Value == null) ||              // let this method crash like its original\n      ('valueOf' in Value) && (typeof Value.valueOf === 'function')\n      ? Value.valueOf()\n      : Object.prototype.valueOf.call(Value)\n    )\n  }\n\n/**** ObjectMergedWith ****/\n\n  export function ObjectMergedWith (\n    TargetObject:object, ...otherObjectList:object[]\n  ):object {\n    for (let i = 0, l = otherObjectList.length; i < l; i++) {\n      let otherObject = otherObjectList[i]\n      if (otherObject == null) { continue }\n\n      if (typeof otherObject === 'object') {\n        for (let Key in otherObject) {\n          let Descriptor = Object.getOwnPropertyDescriptor(otherObject,Key)\n          if (Descriptor != null) {\n            Object.defineProperty(TargetObject,Key,Descriptor)\n          }\n        }\n      } else {\n        throwError('InvalidArgument: argument #' + (i+1) + ' is not an object')\n      }\n    }\n\n    return TargetObject\n  }\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                      Value Classification Functions                      --\n//------------------------------------------------------------------------------\n\n/**** ValueExists ****/\n\n  export function ValueExists (Value:any):boolean {\n    return (Value != null)\n  }\n\n/**** ValueIsMissing ****/\n\n  export function ValueIsMissing (Value:any):boolean {\n    return (Value == null)\n  }\n\n/**** ValueIsBoolean ****/\n\n  export function ValueIsBoolean (Value:any):boolean {\n    return (typeof Value === 'boolean') || (Value instanceof Boolean)\n  }\n\n/**** ValueIsNumber ****/\n\n  export function ValueIsNumber (Value:any):boolean {\n    return (typeof Value === 'number') || (Value instanceof Number)\n  }\n\n/**** ValueIsFiniteNumber (pure \"isFinite\" breaks on objects) ****/\n\n  export function ValueIsFiniteNumber (Value:any):boolean {\n    return (\n      (typeof Value === 'number') || (Value instanceof Number)\n    ) && isFinite(Value.valueOf())\n  }\n\n/**** ValueIsNaN (numeric, but NaN - this differs from pure \"isNaN\") ****/\n\n  export function ValueIsNaN (Value:any):boolean {\n    return (\n      (typeof Value === 'number') || (Value instanceof Number)\n    ) && isNaN(Value.valueOf())\n  }\n\n/**** ValueIsNumberInRange ****/\n\n  export function ValueIsNumberInRange (\n    Value:any, minValue?:number, maxValue?:number,\n    withMin:boolean = true, withMax:boolean = true\n  ):boolean {\n    if (! ValueIsNumber(Value) || isNaN(Value)) { return false }\n\n    if (ValueIsFiniteNumber(minValue)) {    // more robust than \"isFinite\" alone\n      if (ValueIsFiniteNumber(maxValue)) {  // more robust than \"isFinite\" alone\n        if (\n          (Value < (minValue as Number)) || (! withMin && (Value === minValue)) ||\n          (Value > (maxValue as Number)) || (! withMax && (Value === maxValue))\n        ) {\n          return false\n        }\n      } else {\n        if ((Value < (minValue as Number)) || (! withMin && (Value === minValue))) {\n          return false\n        }\n      }\n    } else {\n      if (ValueIsFiniteNumber(maxValue)) {  // more robust than \"isFinite\" alone\n        if ((Value > (maxValue as Number)) || (! withMax && (Value === maxValue))) {\n          return false\n        }\n      }\n    }\n\n    return true\n  }\n\n/**** ValueIsInteger ****/\n\n  export function ValueIsInteger (Value:any):boolean {\n    if ((typeof Value !== 'number') && ! (Value instanceof Number)) {\n      return false\n    }\n\n    Value = Value.valueOf()\n    return isFinite(Value) && (Math.round(Value) === Value)\n  }\n\n/**** ValueIsIntegerInRange ****/\n\n  export function ValueIsIntegerInRange (\n    Value:any, minValue?:number, maxValue?:number\n  ):boolean {\n    if (! ValueIsInteger(Value) || isNaN(Value)) { return false }\n\n    if (ValueIsFiniteNumber(minValue)) {    // more robust than \"isFinite\" alone\n      if (ValueIsFiniteNumber(maxValue)) {  // more robust than \"isFinite\" alone\n        if ((Value < (minValue as Number)) || (Value > (maxValue as Number))) {\n          return false\n        }\n      } else {\n        if (Value < (minValue as Number)) {\n          return false\n        }\n      }\n    } else {\n      if (ValueIsFiniteNumber(maxValue)) {  // more robust than \"isFinite\" alone\n        if (Value > (maxValue as Number)) {\n          return false\n        }\n      }\n    }\n\n    return true\n  }\n\n/**** ValueIsOrdinal ****/\n\n  export function ValueIsOrdinal (Value:any):boolean {\n    if ((typeof Value !== 'number') && ! (Value instanceof Number)) {\n      return false\n    }\n\n    Value = Value.valueOf()\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 0)\n  }\n\n/**** ValueIsCardinal ****/\n\n  export function ValueIsCardinal (Value:any):boolean {\n    if ((typeof Value !== 'number') && ! (Value instanceof Number)) {\n      return false\n    }\n\n    Value = Value.valueOf()\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 1)\n  }\n\n/**** ValueIsString ****/\n\n  export function ValueIsString (Value:any):boolean {\n    return (typeof Value === 'string') || (Value instanceof String)\n  }\n\n/**** ValueIs[Non]EmptyString ****/\n\n  const emptyStringPattern = /^\\s*$/\n\n  export function ValueIsEmptyString (Value:any):boolean {\n    return (\n      (typeof Value === 'string') || (Value instanceof String)\n    ) && emptyStringPattern.test(Value.valueOf())\n  }\n\n  export function ValueIsNonEmptyString (Value:any):boolean {\n    return (\n      (typeof Value === 'string') || (Value instanceof String)\n    ) && ! emptyStringPattern.test(Value.valueOf())\n  }\n\n/**** ValueIsStringMatching ****/\n\n  export function ValueIsStringMatching (Value:any, Pattern:RegExp):boolean {\n    return (\n      (typeof Value === 'string') || (Value instanceof String)\n    ) && Pattern.test(Value.valueOf())\n  }\n\n/**** ValueIsText ****/\n\n  const noCtrlCharsButCRLFPattern = /^[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/\n\n  export function ValueIsText (Value:any):boolean {\n    return ValueIsStringMatching(Value,noCtrlCharsButCRLFPattern)\n  }\n\n/**** ValueIsTextline ****/\n\n  const noCtrlCharsPattern = /^[^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/\n\n  export function ValueIsTextline (Value:any):boolean {\n    return ValueIsStringMatching(Value,noCtrlCharsPattern)\n  }\n\n/**** ValueIsFunction ****/\n\n  export function ValueIsFunction (Value:any):boolean {\n    return (typeof Value === 'function')\n  }\n\n/**** ValueIsAnonymousFunction ****/\n\n  export function ValueIsAnonymousFunction (Value:any):boolean {\n    return (\n      (typeof Value === 'function') &&\n      ((Value.name == null) || (Value.name === ''))\n    )\n  }\n\n/**** ValueIsNamedFunction ****/\n\n  export function ValueIsNamedFunction (Value:any):boolean {\n    return (\n      (typeof Value === 'function') &&\n      (Value.name != null) && (Value.name !== '')\n    )\n  }\n\n/**** ValueIsNativeFunction ****/\n\n  export function ValueIsNativeFunction (Value:any):boolean {\n    return (\n      (typeof Value === 'function') &&\n      /^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString())\n    )\n  }\n\n/**** ValueIsScriptedFunction ****/\n\n  export function ValueIsScriptedFunction (Value:any):boolean {\n    return (\n      (typeof Value === 'function') &&\n      ! /^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString())\n    )\n  }\n\n/**** ValueIsObject ****/\n\n  export function ValueIsObject (Value:any):boolean {\n    return (Value != null) && (typeof Value === 'object')\n  }\n\n/**** ValueIsPlainObject ****/\n\n  export function ValueIsPlainObject (Value:any):boolean {\n    return (\n      (Value != null) && (typeof Value === 'object') &&\n      (Object.getPrototypeOf(Value) === Object.prototype)\n    )\n  }\n\n/**** ValueIsVanillaObject ****/\n\n  export function ValueIsVanillaObject (Value:any):boolean {\n    return (\n      (Value != null) && (typeof Value === 'object') &&\n      ! (Value instanceof Object)\n    )\n  }\n\n/**** ValueIsArray ****/\n\n  export let ValueIsArray = Array.isArray\n\n/**** ValueIsList (\"dense\" array) ****/\n\n  export function ValueIsList (\n    Value:any, minLength?:number, maxLength?:number\n  ):boolean {\n    if (ValueIsArray(Value)) {\n      for (let i = 0, l = Value.length; i < l; i++) {\n        if (Value[i] === undefined) { return false }\n      }\n\n      if (minLength != null) {\n        if (Value.length < minLength) { return false }\n      }\n\n      if (maxLength != null) {\n        if (Value.length > maxLength) { return false }\n      }\n      return true\n    }\n\n    return false\n  }\n\n/**** ValueIsListSatisfying ****/\n\n  export function ValueIsListSatisfying (\n    Value:any, Validator:Function, minLength?:number, maxLength?:number\n  ):boolean {\n    if (ValueIsArray(Value)) {\n      try {\n        for (let i = 0, l = Value.length; i < l; i++) {\n          if (Validator(Value[i]) == false) { return false }\n        }\n\n        if (minLength != null) {\n          if (Value.length < minLength) { return false }\n        }\n\n        if (maxLength != null) {\n          if (Value.length > maxLength) { return false }\n        }\n        return true\n      } catch (Signal) { /* nop */ }\n    }\n\n    return false\n  }\n\n/**** ValueIsInstanceOf ****/\n\n  export function ValueIsInstanceOf (Value:any, Constructor:Function):boolean {\n    return (Value instanceof Constructor)\n  }\n\n/**** ValueInheritsFrom ****/\n\n  export function ValueInheritsFrom (Value:any, Prototype:Object):boolean {\n    return Object_isPrototypeOf(Prototype,Value)\n  }\n\n/**** ValueIsDate ****/\n\n  export function ValueIsDate (Value:any):boolean {\n    return (Value instanceof Date)\n  }\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (Value instanceof Error)\n  }\n\n/**** ValueIsPromise ****/\n\n  export function ValueIsPromise (Value:any):boolean {\n    return (Value != null) && (typeof Value.then === 'function')\n  }\n// see https://stackoverflow.com/questions/27746304/how-do-i-tell-if-an-object-is-a-promise\n\n/**** ValueIsRegExp ****/\n\n  export function ValueIsRegExp (Value:any):boolean {\n    return (Value instanceof RegExp)\n  }\n\n/**** ValueIsOneOf ****/\n\n  export function ValueIsOneOf (Value:any, ValueList:any[]):boolean {\n    return (ValueList.indexOf(Value) >= 0)\n  }                     // no automatic unboxing of boxed values and vice-versa!\n\n/**** ValueIsColor ****/\n\n  export function ValueIsColor (Value:any):boolean {\n    return ValueIsString(Value) && (\n      ColorSet.hasOwnProperty (Value) ||\n      /^#[a-fA-F0-9]{6}$/.test(Value) ||\n      /^#[a-fA-F0-9]{8}$/.test(Value) ||\n      /^rgb\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+\\)$/.test(Value) ||        // not perfect\n      /^rgba\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+,([01]|[0]?[.][0-9]+)\\)$/.test(Value) // dto.\n    )\n  }\n\n/**** ValueIsEMailAddress ****/\n\n  const EMailAddressPattern = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n  // see https://stackoverflow.com/questions/201323/how-to-validate-an-email-address-using-a-regular-expression\n\n  export function ValueIsEMailAddress (Value:any):boolean {\n    return ValueIsStringMatching(Value, EMailAddressPattern)\n  }\n\n/**** ValueIsURL ****/\n\n  const noCtrlCharsOrWhitespacePattern = /^[^\\s\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/\n\n  export function ValueIsURL (Value:any):boolean {\n    if (\n      ! ValueIsStringMatching(Value, noCtrlCharsOrWhitespacePattern) ||\n      (Value === '')\n    ) { return false }\n\n    try {\n      new URL(Value, 'file://')\n      return true\n    } catch (Signal) {\n      return false\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                      Argument Validation Functions                       --\n//------------------------------------------------------------------------------\n\n  export const rejectNil = false\n  export const acceptNil = true\n\n/**** validatedArgument ****/\n\n  export function validatedArgument (\n    Description:string, Argument:any, ValueIsValid:(Value:any) => boolean,\n    NilIsAcceptable:boolean, Expectation:string\n  ):any|null|undefined {\n    if (Argument == null) {\n      if (NilIsAcceptable) {\n        return Argument\n      } else {\n        throwError(`MissingArgument: no ${escaped(Description)} given`)\n      }\n    } else {\n      if (ValueIsValid(Argument)) {\n        switch (true) {\n          case Argument instanceof Boolean:\n          case Argument instanceof Number:\n          case Argument instanceof String:\n            return Argument.valueOf()                  // unboxes any primitives\n          default:\n            return Argument\n        }\n      } else {\n        throwError(\n          `InvalidArgument: the given ${escaped(Description)} is no valid ${escaped(Expectation)}`\n        )\n      }\n    }\n  }\n\n/**** ValidatorForClassifier ****/\n\n  export function ValidatorForClassifier (\n    Classifier:(Value:any) => boolean, NilIsAcceptable:boolean,\n    Expectation:string\n  ):Function {\n    let Validator = function (Description:string, Argument:any):any {\n      return validatedArgument(\n        Description, Argument, Classifier, NilIsAcceptable, Expectation\n      )\n    }\n\n    let ClassifierName = Classifier.name\n    if ((ClassifierName != null) && /^ValueIs/.test(ClassifierName)) {\n      let ValidatorName = ClassifierName.replace(  // derive name from validator\n        /^ValueIs/, NilIsAcceptable ? 'allow' : 'expect'\n      )\n      return FunctionWithName(Validator,ValidatorName)\n    } else {\n      return Validator                              // without any specific name\n    }\n  }\n\n/**** FunctionWithName (works with older JS engines as well) ****/\n\n  export function FunctionWithName (\n    originalFunction:Function, desiredName:string|String\n  ):Function {\n    if (originalFunction == null) {\n      throwError('MissingArgument: no function given')\n    }\n    if (typeof originalFunction !== 'function') {\n      throwError('InvalidArgument: the given 1st Argument is not a JavaScript function')\n    }\n\n    if (desiredName == null) {\n      throwError('MissingArgument: no desired name given')\n    }\n    if ((typeof desiredName !== 'string') && ! (desiredName instanceof String)) {\n      throwError('InvalidArgument: the given desired name is not a string')\n    }\n\n    if (originalFunction.name === desiredName) { return originalFunction }\n\n    try {\n      Object.defineProperty(originalFunction, 'name', { value:desiredName })\n      if (originalFunction.name === desiredName) { return originalFunction }\n    } catch (signal) { /* ok - let's take the hard way */ }\n\n    let renamed = new Function(\n      'originalFunction', 'return function ' + desiredName + ' () {' +\n        'return originalFunction.apply(this,Array.prototype.slice.apply(arguments))' +\n      '}'\n    )\n    return renamed(originalFunction)\n  }                                  // also works with older JavaScript engines\n\n/**** expect[ed]Value ****/\n\n  export function expectValue (Description:string, Argument:any):any {\n    if (Argument == null) {\n      throwError(`MissingArgument: no ${escaped(Description)} given`)\n    } else {\n      return Argument.valueOf()\n    }\n  }\n  export const expectedValue = expectValue\n\n/**** allow/expect[ed]Boolean ****/\n\n  export const allowBoolean = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsBoolean, acceptNil, 'boolean value'\n  ), allowedBoolean = allowBoolean\n\n  export const expectBoolean = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsBoolean, rejectNil, 'boolean value'\n  ), expectedBoolean = expectBoolean\n\n/**** allow/expect[ed]Number ****/\n\n  export const allowNumber = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsNumber, acceptNil, 'numeric value'\n  ), allowedNumber = allowNumber\n\n  export const expectNumber = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsNumber, rejectNil, 'numeric value'\n  ), expectedNumber = expectNumber\n\n/**** allow/expect[ed]FiniteNumber ****/\n\n  export const allowFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsFiniteNumber, acceptNil, 'finite numeric value'\n  ), allowedFiniteNumber = allowFiniteNumber\n\n  export const expectFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsFiniteNumber, rejectNil, 'finite numeric value'\n  ), expectedFiniteNumber = expectFiniteNumber\n\n/**** allow/expect[ed]NaN ****/\n\n  export const allowNaN = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsNaN, acceptNil, 'NaN value'\n  ), allowedNaN = allowNaN\n\n  export const expectNaN = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsNaN, rejectNil, 'NaN value'\n  ), expectedNaN = expectNaN\n\n/**** allow[ed]NumberInRange ****/\n\n  export function allowNumberInRange (\n    Description:string, Argument:any,\n    minValue?:number, maxValue?:number, withMin?:boolean, withMax?:boolean\n  ):number|null|undefined {\n    return (Argument == null\n      ? Argument\n      : expectedNumberInRange(Description, Argument, minValue,maxValue, withMin,withMax)\n    )\n  }\n  export const allowedNumberInRange = allowNumberInRange\n\n/**** expect[ed]NumberInRange ****/\n\n  export function expectNumberInRange (\n    Description:string, Argument:any,\n    minValue?:number, maxValue?:number, withMin?:boolean, withMax?:boolean\n  ):number {\n    expectNumber(Description, Argument)\n\n    if (isNaN(Argument)) {\n      throwError(\n        `InvalidArgument: the given ${escaped(Description)} is not-a-number`\n      )\n    }\n\n    if (withMin == null) { withMin = true }\n    if (withMax == null) { withMax = true }\n\n    if ((minValue != null) && isFinite(minValue)) {\n      if ((maxValue != null) && isFinite(maxValue)) {\n        if (\n          (Argument < minValue) || (! withMin && (Argument === minValue)) ||\n          (Argument > maxValue) || (! withMax && (Argument === maxValue))\n        ) {\n          throw new RangeError(\n            `the given ${escaped(Description)} (${Argument}) is outside ` +\n            `the allowed range (${minValue}...${maxValue})`\n          )\n        }\n      } else {\n        if ((Argument < minValue) || (! withMin && (Argument === minValue))) {\n          throw new RangeError(\n            `the given ${escaped(Description)} is below the allowed ` +\n            `minimum (${Argument} ${withMin ? '<' : '<='} ${minValue})`\n          )\n        }\n      }\n    } else {\n      if ((maxValue != null) && isFinite(maxValue)) {\n        if ((Argument > maxValue) || (! withMax && (Argument === maxValue))) {\n          throw new RangeError(\n            `the given ${escaped(Description)} exceeds the allowed ` +\n            `maximum (${Argument} ${withMax ? '>' : '>='} ${maxValue})`\n          )\n        }\n      }\n    }\n\n    return Argument.valueOf()\n  }\n  export const expectedNumberInRange = expectNumberInRange\n\n/**** allow/expect[ed]Integer ****/\n\n  export const allowInteger = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsInteger, acceptNil, 'integral numeric value'\n  ), allowedInteger = allowInteger\n\n  export const expectInteger = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsInteger, rejectNil, 'integral numeric value'\n  ), expectedInteger = expectInteger\n\n/**** allow[ed]IntegerInRange ****/\n\n  export function allowIntegerInRange (\n    Description:string, Argument:any, minValue?:number, maxValue?:number\n  ):number|null|undefined {\n    return (Argument == null\n      ? Argument\n      : expectedIntegerInRange(Description, Argument, minValue,maxValue)\n    )\n  }\n  export const allowedIntegerInRange = allowIntegerInRange\n\n/**** expect[ed]IntegerInRange ****/\n\n  export function expectIntegerInRange (\n    Description:string, Argument:any, minValue?:number, maxValue?:number\n  ):number {\n    expectInteger(Description, Argument)\n\n    if (isNaN(Argument)) {\n      throwError(\n        `InvalidArgument: the given ${escaped(Description)} is not-a-number`\n      )\n    }\n\n    if ((minValue != null) && isFinite(minValue)) {\n      if ((maxValue != null) && isFinite(maxValue)) {\n        if ((Argument < minValue) || (Argument > maxValue)) {\n          throw new RangeError(\n            `the given ${escaped(Description)} (${Argument}) is outside ` +\n            `the allowed range (${minValue}...${maxValue})`\n          )\n        }\n      } else {\n        if (Argument < minValue) {\n          throw new RangeError(\n            `the given ${escaped(Description)} is below the allowed ` +\n            `minimum (${Argument} < ${minValue})`\n          )\n        }\n      }\n    } else {\n      if ((maxValue != null) && isFinite(maxValue)) {\n        if (Argument > maxValue) {\n          throw new RangeError(\n            `the given ${escaped(Description)} exceeds the allowed ` +\n            `maximum (${Argument} > ${maxValue})`\n          )\n        }\n      }\n    }\n\n    return Argument.valueOf()\n  }\n  export const expectedIntegerInRange = expectIntegerInRange\n\n/**** allow/expect[ed]Ordinal ****/\n\n  export const allowOrdinal = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsOrdinal, acceptNil, 'ordinal number'\n  ), allowedOrdinal = allowOrdinal\n\n  export const expectOrdinal = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsOrdinal, rejectNil, 'ordinal number'\n  ), expectedOrdinal = expectOrdinal\n\n/**** allow/expect[ed]Cardinal ****/\n\n  export const allowCardinal = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsCardinal, acceptNil, 'cardinal number'\n  ), allowedCardinal = allowCardinal\n\n  export const expectCardinal = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsCardinal, rejectNil, 'cardinal number'\n  ), expectedCardinal = expectCardinal\n\n/**** allow/expect[ed]String ****/\n\n  export const allowString = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsString, acceptNil, 'literal string'\n  ), allowedString = allowString\n\n  export const expectString = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsString, rejectNil, 'literal string'\n  ), expectedString = expectString\n\n/**** allow/expect[ed]NonEmptyString ****/\n\n  export const allowNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsNonEmptyString, acceptNil, 'non-empty literal string'\n  ), allowedNonEmptyString = allowNonEmptyString\n\n  export const expectNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsNonEmptyString, rejectNil, 'non-empty literal string'\n  ), expectedNonEmptyString = expectNonEmptyString\n\n/**** allow[ed]StringMatching ****/\n\n  export function allowStringMatching (\n    Description:string, Argument:any, Pattern:RegExp\n  ):string|null|undefined {\n    return (Argument == null\n      ? Argument\n      : expectedStringMatching(Description, Argument, Pattern)\n    )\n  }\n  export const allowedStringMatching = allowStringMatching\n\n/**** expect[ed]StringMatching ****/\n\n  export function expectStringMatching (\n    Description:string, Argument:any, Pattern:RegExp\n  ):string {\n    expectString(Description, Argument)\n\n    if (Pattern.test(Argument)) {\n      return Argument.valueOf()\n    } else {\n      throwError(\n        `InvalidArgument: the given ${escaped(Description)} does not match the specified pattern`\n      )\n    }\n  }\n  export const expectedStringMatching = expectStringMatching\n\n/**** allow/expect[ed]Text ****/\n\n  export const allowText = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsText, acceptNil, 'literal text'\n  ), allowedText = allowText\n\n  export const expectText = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsText, rejectNil, 'literal text'\n  ), expectedText = expectText\n\n/**** allow/expect[ed]Textline ****/\n\n  export const allowTextline = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsTextline, acceptNil, 'single line of text'\n  ), allowedTextline = allowTextline\n\n  export const expectTextline = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsTextline, rejectNil, 'single line of text'\n  ), expectedTextline = expectTextline\n\n/**** allow/expect[ed]Function ****/\n\n  export const allowFunction = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsFunction, acceptNil, 'JavaScript function'\n  ), allowedFunction = allowFunction\n\n  export const expectFunction = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsFunction, rejectNil, 'JavaScript function'\n  ), expectedFunction = expectFunction\n\n/**** allow/expect[ed]AnonymousFunction ****/\n\n  export const allowAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsAnonymousFunction, acceptNil, 'anonymous JavaScript function'\n  ), allowedAnonymousFunction = allowAnonymousFunction\n\n  export const expectAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsAnonymousFunction, rejectNil, 'anonymous JavaScript function'\n  ), expectedAnonymousFunction = expectAnonymousFunction\n\n/**** allow/expect[ed]NamedFunction ****/\n\n  export const allowNamedFunction = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsNamedFunction, acceptNil, 'named JavaScript function'\n  ), allowedNamedFunction = allowNamedFunction\n\n  export const expectNamedFunction = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsNamedFunction, rejectNil, 'named JavaScript function'\n  ), expectedNamedFunction = expectNamedFunction\n\n/**** allow/expect[ed]NativeFunction ****/\n\n  export const allowNativeFunction = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsNativeFunction, acceptNil, 'native JavaScript function'\n  ), allowedNativeFunction = allowNativeFunction\n\n  export const expectNativeFunction = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsNativeFunction, rejectNil, 'native JavaScript function'\n  ), expectedNativeFunction = expectNativeFunction\n\n/**** allow/expect[ed]ScriptedFunction ****/\n\n  export const allowScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsScriptedFunction, acceptNil, 'scripted JavaScript function'\n  ), allowedScriptedFunction = allowScriptedFunction\n\n  export const expectScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsScriptedFunction, rejectNil, 'scripted JavaScript function'\n  ), expectedScriptedFunction = expectScriptedFunction\n\n/**** allow/expect[ed]Object ****/\n\n  export const allowObject = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsObject, acceptNil, 'JavaScript object'\n  ), allowedObject = allowObject\n\n  export const expectObject = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsObject, rejectNil, 'JavaScript object'\n  ), expectedObject = expectObject\n\n/**** allow/expect[ed]PlainObject ****/\n\n  export const allowPlainObject = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsPlainObject, acceptNil, '\"plain\" JavaScript object'\n  ), allowedPlainObject = allowPlainObject\n\n  export const expectPlainObject = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsPlainObject, rejectNil, '\"plain\" JavaScript object'\n  ), expectedPlainObject = expectPlainObject\n\n/**** allow/expect[ed]VanillaObject ****/\n\n  export const allowVanillaObject = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsVanillaObject, acceptNil, '\"vanilla\" JavaScript object'\n  ), allowedVanillaObject = allowVanillaObject\n\n  export const expectVanillaObject = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsVanillaObject, rejectNil, '\"vanilla\" JavaScript object'\n  ), expectedVanillaObject = expectVanillaObject\n\n/**** allow[ed]Array ****/\n\n  export function allowArray (Description:string, Argument:any):any[]|null|undefined {\n    return (Argument == null\n      ? Argument\n      : expectedArray(Description,Argument)\n    )\n  }\n  export const allowedArray = allowArray\n\n/**** expect[ed]Array ****/\n\n  export function expectArray (Description:string, Argument:any):any[] {\n    if (Argument == null) {\n      throwError(`MissingArgument: no ${escaped(Description)} given`)\n    }\n\n    if (ValueIsArray(Argument)) {\n      return Argument\n    } else {\n      throwError(\n        `InvalidArgument: the given ${escaped(Description)} is no JavaScript array`\n      )\n    }\n  }\n  export const expectedArray = expectArray\n\n/**** allow[ed]List ****/\n\n  export function allowList (\n    Description:string, Argument:any, Expectation?:string,\n    minLength?:number, maxLength?:number\n  ):any[]|null|undefined {\n    return (Argument == null\n      ? Argument\n      : expectedList(Description, Argument, Expectation, minLength,maxLength)\n    )\n  }\n  export const allowedList = allowList\n\n/**** expect[ed]List ****/\n\n  export function expectList (\n    Description:string, Argument:any, Expectation?:string,\n    minLength?:number, maxLength?:number\n  ):any[] {\n    if (Argument == null) {\n      throwError(`MissingArgument: no ${escaped(Description)} given`)\n    }\n\n    if (ValueIsList(Argument, minLength,maxLength)) {\n      return Argument\n    } else {\n      throwError(\n        `InvalidArgument: the given ${escaped(Description)} is ` + (\n          Expectation == null\n          ? 'either not a list or contains an invalid number of elements'\n          : 'no ' + escaped(Expectation)\n        )\n      )\n    }\n  }\n  export const expectedList = expectList\n\n/**** allow[ed]ListSatisfying ****/\n\n  export function allowListSatisfying (\n    Description:string, Argument:any, Validator:(Value:any) => boolean,\n    Expectation?:string, minLength?:number, maxLength?:number\n  ):any[]|null|undefined {\n    return (Argument == null\n      ? Argument\n      : expectedListSatisfying(\n          Description, Argument, Validator, Expectation, minLength,maxLength\n        )\n    )\n  }\n  export const allowedListSatisfying = allowListSatisfying\n\n/**** expect[ed]ListSatisfying ****/\n\n  export function expectListSatisfying (\n    Description:string, Argument:any, Validator:(Value:any) => boolean,\n    Expectation?:string, minLength?:number, maxLength?:number\n  ):any[] {\n    if (Argument == null) {\n      throwError(`MissingArgument: no ${escaped(Description)} given`)\n    }\n\n    if (ValueIsListSatisfying(Argument,Validator, minLength,maxLength)) {\n      return Argument\n    } else {\n      throwError(\n        `InvalidArgument: the given ${escaped(Description)} is ` + (\n          Expectation == null\n          ? 'either not a list or contains invalid elements'\n          : 'no ' + escaped(Expectation)\n        )\n      )\n    }\n  }\n  export const expectedListSatisfying = expectListSatisfying\n\n/**** allow[ed]InstanceOf ****/\n\n  export function allowInstanceOf (\n    Description:string, Argument:any, constructor:Function, Expectation:string\n  ):any|null|undefined {\n    return (Argument == null\n      ? Argument\n      : expectedInstanceOf(Description, Argument, constructor, Expectation)\n    )\n  }\n  export const allowedInstanceOf = allowInstanceOf\n\n/**** expect[ed]InstanceOf ****/\n\n  export function expectInstanceOf (\n    Description:string, Argument:any, constructor:Function, Expectation:string\n  ):any {\n    if (Argument == null) {\n      throwError(`MissingArgument: no ${escaped(Description)} given`)\n    }\n\n    if (! (Argument instanceof constructor)) {\n      throwError(\n        `InvalidArgument: the given ${escaped(Description)} is no ${escaped(Expectation)}`\n      )\n    }\n\n    return Argument\n  }\n  export const expectedInstanceOf = expectInstanceOf\n\n/**** allow[ed]ValueInheritingFrom ****/\n\n  export function allowValueInheritingFrom (\n    Description:string, Argument:any, prototype:any, Expectation:string\n  ):any|null|undefined {\n    return (Argument == null\n      ? Argument\n      : expectedValueInheritingFrom(Description, Argument, prototype, Expectation)\n    )\n  }\n  export const allowedValueInheritingFrom = allowValueInheritingFrom\n\n/**** expect[ed]ValueInheritingFrom ****/\n\n  export function expectValueInheritingFrom (\n    Description:string, Argument:any, prototype:any, Expectation:string\n  ):any {\n    if (Argument == null) {\n      throwError(`MissingArgument: no ${escaped(Description)} given`)\n    }\n\n    if (prototype.isPrototypeOf(Argument)) {\n      return Argument\n    } else {\n      throwError(\n        `InvalidArgument: the given ${escaped(Description)} is no ${escaped(Expectation)}`\n      )\n    }\n  }\n  export const expectedValueInheritingFrom = expectValueInheritingFrom\n\n/**** allow/expect[ed]Date ****/\n\n  export const allowDate = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsDate, acceptNil, 'JavaScript Date object'\n  ), allowedDate = allowDate\n\n  export const expectDate = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsDate, rejectNil, 'JavaScript Date object'\n  ), expectedDate = expectDate\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsError, acceptNil, 'JavaScript Error object'\n  ), allowedError = allowError\n\n  export const expectError = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsError, rejectNil, 'JavaScript Error object'\n  ), expectedError = expectError\n\n/**** allow/expect[ed]Promise ****/\n\n  export const allowPromise = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsPromise, acceptNil, 'JavaScript Promise (or \"Thenable\") object'\n  ), allowedPromise = allowPromise\n\n  export const expectPromise = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsPromise, rejectNil, 'JavaScript Promise (or \"Thenable\") object'\n  ), expectedPromise = expectPromise\n\n/**** allow/expect[ed]RegExp ****/\n\n  export const allowRegExp = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsRegExp, acceptNil, 'JavaScript RegExp object'\n  ), allowedRegExp = allowRegExp\n\n  export const expectRegExp = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsRegExp, rejectNil, 'JavaScript RegExp object'\n  ), expectedRegExp = expectRegExp\n\n/**** allow[ed]OneOf ****/\n\n  export function allowOneOf (\n    Description:string, Argument:any, ValueList:any[]\n  ):any|null|undefined {\n    return (Argument == null\n      ? Argument\n      : expectedOneOf(Description, Argument, ValueList)\n    )\n  }\n  export const allowedOneOf = allowOneOf\n\n/**** expect[ed]OneOf ****/\n\n  export function expectOneOf (\n    Description:string, Argument:any, ValueList:any[]\n  ):any {\n    if (Argument == null) {\n      throwError(`MissingArgument: no ${escaped(Description)} given`)\n    }\n\n    if (ValueIsOneOf(Argument,ValueList)) {\n      return (                                         // unboxes any primitives\n        (Argument == null) || (typeof Argument.valueOf !== 'function')\n        ? Argument\n        : Argument.valueOf()\n      )\n    } else {\n      throwError(\n        `InvalidArgument: the given ${escaped(Description)} is not among the supported values`\n      )\n    }\n  }\n  export const expectedOneOf = expectOneOf\n\n/**** allow/expect[ed]Color ****/\n\n  export const allowColor = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsColor, acceptNil, 'CSS color specification'\n  ), allowedColor = allowColor\n\n  export const expectColor = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsColor, rejectNil, 'CSS color specification'\n  ), expectedColor = expectColor\n\n/**** allow/expect[ed]EMailAddress ****/\n\n  export const allowEMailAddress = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsEMailAddress, acceptNil, 'EMail address'\n  ), allowedEMailAddress = allowEMailAddress\n\n  export const expectEMailAddress = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsEMailAddress, rejectNil, 'EMail address'\n  ), expectedEMailAddress = expectEMailAddress\n\n/**** allow/expect[ed]URL ****/\n\n  export const allowURL = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsURL, acceptNil, 'URL'\n  ), allowedURL = allowURL\n\n  export const expectURL = /*#__PURE__*/ ValidatorForClassifier(\n    ValueIsURL, rejectNil, 'URL'\n  ), expectedURL = expectURL\n\n/**** escaped - escapes all control characters in a given string ****/\n\n  export function escaped (Text:string):string {\n    const EscapeSequencePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?/g\n    const CtrlCharCodePattern  = /[\\x00-\\x1f\\x7f-\\x9f]/g\n\n    return Text\n      .replace(EscapeSequencePattern, function (Match:string):string {\n        return (Match === '\\\\' ? '\\\\\\\\' : Match)\n      })\n      .replace(CtrlCharCodePattern, function (Match:string):string {\n        switch (Match) {\n          case '\\0':  return '\\\\0'\n          case '\\b':  return '\\\\b'\n          case '\\f':  return '\\\\f'\n          case '\\n':  return '\\\\n'\n          case '\\r':  return '\\\\r'\n          case '\\t':  return '\\\\t'\n          case '\\v':  return '\\\\v'\n          default: {\n            let HexCode = Match.charCodeAt(0).toString(16)\n            return '\\\\x' + '00'.slice(HexCode.length) + HexCode\n          }\n        }\n      })\n  }\n\n/**** unescaped - evaluates all escape sequences in a given string ****/\n\n  export function unescaped (Text:string):string {\n    const EscapeSequencePattern = /\\\\[0bfnrtv'\"\\\\\\/]|\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}/g\n\n    return Text\n      .replace(EscapeSequencePattern, function (Match:string):string {\n        switch (Match) {\n          case '\\\\0':  return '\\0'\n          case '\\\\b':  return '\\b'\n          case '\\\\f':  return '\\f'\n          case '\\\\n':  return '\\n'\n          case '\\\\r':  return '\\r'\n          case '\\\\t':  return '\\t'\n          case '\\\\v':  return '\\v'\n          case '\\\\\\'': return \"'\"\n          case '\\\\\"':  return '\"'\n          case '\\\\\\\\': return \"\\\\\"\n          default: {\n            let CharCode = parseInt(Match.slice(2),16)\n            return String.fromCharCode(CharCode)\n          }\n        }\n    })\n  }\n\n/**** quotable - makes a given string ready to be put in single/double quotes ****/\n\n  export function quotable (Text:string, Quote:'\"' | \"'\" = '\"'):string {\n    const EscSeqOrSglQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|'/g\n    const EscSeqOrDblQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|\"/g\n    const CtrlCharCodePattern     = /[\\x00-\\x1f\\x7f-\\x9f]/g\n\n    return Text\n      .replace(\n        Quote === \"'\" ? EscSeqOrSglQuotePattern : EscSeqOrDblQuotePattern,\n        function (Match:string):string {\n          switch (Match) {\n            case \"'\":  return \"\\\\'\"\n            case '\"':  return '\\\\\"'\n            case '\\\\': return '\\\\\\\\'\n            default:   return Match\n          }\n        }\n      )\n      .replace(CtrlCharCodePattern, function (Match:string):string {\n        switch (Match) {\n          case '\\0':  return '\\\\0'\n          case '\\b':  return '\\\\b'\n          case '\\f':  return '\\\\f'\n          case '\\n':  return '\\\\n'\n          case '\\r':  return '\\\\r'\n          case '\\t':  return '\\\\t'\n          case '\\v':  return '\\\\v'\n          default: {\n            let HexCode = Match.charCodeAt(0).toString(16)\n            return '\\\\x' + '00'.slice(HexCode.length) + HexCode\n          }\n        }\n      })\n  }\n\n/**** quoted ****/\n\n  export function quoted (Text:string, Quote:'\"' | \"'\" = '\"'):string {\n    return Quote + quotable(Text,Quote) + Quote\n  }\n\n/**** HTMLsafe ****/\n\n  export function HTMLsafe (Argument:string, EOLReplacement?:string):string {\n    EOLReplacement = (EOLReplacement || '').trim() || '<br/>'\n    return Argument.replace(\n      /[&<>\"'\\u0000-\\u001F\\u007F-\\u009F\\\\]/g, function (Match:string):string {\n        switch (Match) {\n          case '&':  return '&amp;'\n          case '<':  return '&lt;'\n          case '>':  return '&gt;'\n          case '\"':  return '&quot;'\n          case \"'\":  return '&apos;'\n          case '\\b': return '&#92;b'\n          case '\\f': return '&#92;f'\n          case '\\n': return EOLReplacement as string\n          case '\\r': return '&#92;r'\n          case '\\t': return '&#92;t'\n          case '\\v': return '&#92;v'\n          case '\\\\': return '&#92;'\n          default:   let Result = Match.charCodeAt(0).toString(16)\n                     return '&#x0000'.substring(3,7-Result.length) + Result + ';'\n        }\n      }\n    )\n  }\n\n/**** MarkDownSafe ****/\n\n  export function MarkDownSafe (Argument:string, EOLReplacement?:string):string {\n    return HTMLsafe(Argument, EOLReplacement).replace(/:/g,'&#58;')\n  }\n\n/**** ValuesDiffer ****/\n\n  export function ValuesDiffer (\n    thisValue:any, otherValue:any, Mode?:'by-value'|'by-reference'|undefined\n  ):boolean {\n    if (thisValue === otherValue) { return false }\n\n    let thisType = typeof thisValue\n    if (thisType !== typeof otherValue) { return true }\n\n    /**** ArraysDiffer ****/\n\n      function ArraysDiffer (\n        thisArray:any[], otherArray:any[], Mode:'by-value'|'by-reference'|undefined\n      ):boolean {\n        if (! Array.isArray(otherArray)) { return true }\n\n        if (thisArray.length !== otherArray.length) { return true }\n\n        for (let i = 0, l = thisArray.length; i < l; i++) {\n          if (ValuesDiffer(thisArray[i],otherArray[i],Mode)) { return true }\n        }\n\n        return false\n      }\n\n    /**** ObjectsDiffer ****/\n\n      function ObjectsDiffer (\n        thisObject:any, otherObject:any, Mode:'by-value'|'by-reference'|undefined\n      ):boolean {\n        if (Object.getPrototypeOf(thisObject) !== Object.getPrototypeOf(otherObject)) {\n          return true\n        }\n\n        for (let key in thisObject) {\n          if (! (key in otherObject)) { return true }\n        }\n\n        for (let key in otherObject) {\n          if (! (key in thisObject)) { return true }\n\n          if (ValuesDiffer(thisObject[key],otherObject[key],Mode)) {\n            return true\n          }\n        }\n\n        return false\n      }\n\n    switch (thisType) {\n      case 'undefined':\n      case 'boolean':\n      case 'string':\n      case 'function': return true   // most primitives are compared using \"===\"\n      case 'number':   return (\n                         (isNaN(thisValue) !== isNaN(otherValue)) ||\n                         (Math.abs(thisValue-otherValue) > Number.EPSILON)\n                       )\n      case 'object':\n        if (thisValue  == null) { return true }  // since \"other_value\" != null!\n        if (otherValue == null) { return true }   // since \"this_value\" != null!\n\n        if ((Mode === 'by-value') && (\n          (thisValue instanceof Boolean) ||\n          (thisValue instanceof Number) ||\n          (thisValue instanceof String)\n        )) {\n          return (thisValue.valueOf() !== otherValue.valueOf())\n        }\n\n        if (Array.isArray(thisValue)) {\n          return ArraysDiffer(thisValue,otherValue,Mode)\n        }\n\n        return (\n          Mode === 'by-reference'\n          ? true                           // because (thisValue !== otherValue)\n          : ObjectsDiffer(thisValue,otherValue,Mode)\n        )\n      default: return true                          // unsupported property type\n    }\n\n    return true\n  }\n\n/**** ValuesAreEqual ****/\n\n  export function ValuesAreEqual (\n    thisValue:any, otherValue:any, Mode?:'by-value'|'by-reference'|undefined\n  ):boolean {\n    return ! ValuesDiffer(thisValue,otherValue,Mode)\n  }\n\n/**** ObjectIsEmpty ****/\n\n  export function ObjectIsEmpty (Candidate:any):boolean {\n    expectObject('candidate',Candidate)\n    for (let Key in Candidate) {\n      if (Object_hasOwnProperty(Candidate,Key)) {\n        return false\n      }\n    }\n    return true\n  }\n\n/**** ObjectIsNotEmpty ****/\n\n  export function ObjectIsNotEmpty (Candidate:any):boolean {\n    return ! ObjectIsEmpty(Candidate)\n  }\n\n/**** StringIsEmpty ****/\n\n  export function StringIsEmpty (Candidate:string):boolean {\n    return /^\\s*$/.test(Candidate)\n  }\n\n/**** StringIsNotEmpty ****/\n\n  export function StringIsNotEmpty (Candidate:string):boolean {\n    return ! StringIsEmpty(Candidate)\n  }\n\n/**** constrained ****/\n\n  export function constrained (\n    Value:number, Minimum:number = -Infinity, Maximum:number = Infinity\n  ):number {\n    return Math.max(Minimum, Math.min(Value, Maximum))\n  }\n\n//------------------------------------------------------------------------------\n//--                             Color Utilities                              --\n//------------------------------------------------------------------------------\n\n// built-in color names (see http://www.w3.org/TR/SVG/types.html#ColorKeywords) ----\n\n  export const ColorSet = {\n           transparent:'rgba(0,0,0,0,0.0)',\n             aliceblue:'rgba(240,248,255,1.0)',         lightpink:'rgba(255,182,193,1.0)',\n          antiquewhite:'rgba(250,235,215,1.0)',       lightsalmon:'rgba(255,160,122,1.0)',\n                  aqua:'rgba(0,255,255,1.0)',       lightseagreen:'rgba(32,178,170,1.0)',\n            aquamarine:'rgba(127,255,212,1.0)',      lightskyblue:'rgba(135,206,250,1.0)',\n                 azure:'rgba(240,255,255,1.0)',    lightslategray:'rgba(119,136,153,1.0)',\n                 beige:'rgba(245,245,220,1.0)',    lightslategrey:'rgba(119,136,153,1.0)',\n                bisque:'rgba(255,228,196,1.0)',    lightsteelblue:'rgba(176,196,222,1.0)',\n                 black:'rgba(0,0,0,1.0)',             lightyellow:'rgba(255,255,224,1.0)',\n        blanchedalmond:'rgba(255,235,205,1.0)',              lime:'rgba(0,255,0,1.0)',\n                  blue:'rgba(0,0,255,1.0)',             limegreen:'rgba(50,205,50,1.0)',\n            blueviolet:'rgba(138,43,226,1.0)',              linen:'rgba(250,240,230,1.0)',\n                 brown:'rgba(165,42,42,1.0)',             magenta:'rgba(255,0,255,1.0)',\n             burlywood:'rgba(222,184,135,1.0)',            maroon:'rgba(128,0,0,1.0)',\n             cadetblue:'rgba(95,158,160,1.0)',   mediumaquamarine:'rgba(102,205,170,1.0)',\n            chartreuse:'rgba(127,255,0,1.0)',          mediumblue:'rgba(0,0,205,1.0)',\n             chocolate:'rgba(210,105,30,1.0)',       mediumorchid:'rgba(186,85,211,1.0)',\n                 coral:'rgba(255,127,80,1.0)',       mediumpurple:'rgba(147,112,219,1.0)',\n        cornflowerblue:'rgba(100,149,237,1.0)',    mediumseagreen:'rgba(60,179,113,1.0)',\n              cornsilk:'rgba(255,248,220,1.0)',   mediumslateblue:'rgba(123,104,238,1.0)',\n               crimson:'rgba(220,20,60,1.0)',   mediumspringgreen:'rgba(0,250,154,1.0)',\n                  cyan:'rgba(0,255,255,1.0)',     mediumturquoise:'rgba(72,209,204,1.0)',\n              darkblue:'rgba(0,0,139,1.0)',       mediumvioletred:'rgba(199,21,133,1.0)',\n              darkcyan:'rgba(0,139,139,1.0)',        midnightblue:'rgba(25,25,112,1.0)',\n         darkgoldenrod:'rgba(184,134,11,1.0)',          mintcream:'rgba(245,255,250,1.0)',\n              darkgray:'rgba(169,169,169,1.0)',         mistyrose:'rgba(255,228,225,1.0)',\n             darkgreen:'rgba(0,100,0,1.0)',              moccasin:'rgba(255,228,181,1.0)',\n              darkgrey:'rgba(169,169,169,1.0)',       navajowhite:'rgba(255,222,173,1.0)',\n             darkkhaki:'rgba(189,183,107,1.0)',              navy:'rgba(0,0,128,1.0)',\n           darkmagenta:'rgba(139,0,139,1.0)',             oldlace:'rgba(253,245,230,1.0)',\n        darkolivegreen:'rgba(85,107,47,1.0)',               olive:'rgba(128,128,0,1.0)',\n            darkorange:'rgba(255,140,0,1.0)',           olivedrab:'rgba(107,142,35,1.0)',\n            darkorchid:'rgba(153,50,204,1.0)',             orange:'rgba(255,165,0,1.0)',\n               darkred:'rgba(139,0,0,1.0)',             orangered:'rgba(255,69,0,1.0)',\n            darksalmon:'rgba(233,150,122,1.0)',            orchid:'rgba(218,112,214,1.0)',\n          darkseagreen:'rgba(143,188,143,1.0)',     palegoldenrod:'rgba(238,232,170,1.0)',\n         darkslateblue:'rgba(72,61,139,1.0)',           palegreen:'rgba(152,251,152,1.0)',\n         darkslategray:'rgba(47,79,79,1.0)',        paleturquoise:'rgba(175,238,238,1.0)',\n         darkslategrey:'rgba(47,79,79,1.0)',        palevioletred:'rgba(219,112,147,1.0)',\n         darkturquoise:'rgba(0,206,209,1.0)',          papayawhip:'rgba(255,239,213,1.0)',\n            darkviolet:'rgba(148,0,211,1.0)',           peachpuff:'rgba(255,218,185,1.0)',\n              deeppink:'rgba(255,20,147,1.0)',               peru:'rgba(205,133,63,1.0)',\n           deepskyblue:'rgba(0,191,255,1.0)',                pink:'rgba(255,192,203,1.0)',\n               dimgray:'rgba(105,105,105,1.0)',              plum:'rgba(221,160,221,1.0)',\n               dimgrey:'rgba(105,105,105,1.0)',        powderblue:'rgba(176,224,230,1.0)',\n            dodgerblue:'rgba(30,144,255,1.0)',             purple:'rgba(128,0,128,1.0)',\n             firebrick:'rgba(178,34,34,1.0)',                 red:'rgba(255,0,0,1.0)',\n           floralwhite:'rgba(255,250,240,1.0)',         rosybrown:'rgba(188,143,143,1.0)',\n           forestgreen:'rgba(34,139,34,1.0)',           royalblue:'rgba(65,105,225,1.0)',\n               fuchsia:'rgba(255,0,255,1.0)',         saddlebrown:'rgba(139,69,19,1.0)',\n             gainsboro:'rgba(220,220,220,1.0)',            salmon:'rgba(250,128,114,1.0)',\n            ghostwhite:'rgba(248,248,255,1.0)',        sandybrown:'rgba(244,164,96,1.0)',\n                  gold:'rgba(255,215,0,1.0)',            seagreen:'rgba(46,139,87,1.0)',\n             goldenrod:'rgba(218,165,32,1.0)',           seashell:'rgba(255,245,238,1.0)',\n                  gray:'rgba(128,128,128,1.0)',            sienna:'rgba(160,82,45,1.0)',\n                 green:'rgba(0,128,0,1.0)',                silver:'rgba(192,192,192,1.0)',\n           greenyellow:'rgba(173,255,47,1.0)',            skyblue:'rgba(135,206,235,1.0)',\n                  grey:'rgba(128,128,128,1.0)',         slateblue:'rgba(106,90,205,1.0)',\n              honeydew:'rgba(240,255,240,1.0)',         slategray:'rgba(112,128,144,1.0)',\n               hotpink:'rgba(255,105,180,1.0)',         slategrey:'rgba(112,128,144,1.0)',\n             indianred:'rgba(205,92,92,1.0)',                snow:'rgba(255,250,250,1.0)',\n                indigo:'rgba(75,0,130,1.0)',          springgreen:'rgba(0,255,127,1.0)',\n                 ivory:'rgba(255,255,240,1.0)',         steelblue:'rgba(70,130,180,1.0)',\n                 khaki:'rgba(240,230,140,1.0)',               tan:'rgba(210,180,140,1.0)',\n              lavender:'rgba(230,230,250,1.0)',              teal:'rgba(0,128,128,1.0)',\n         lavenderblush:'rgba(255,240,245,1.0)',           thistle:'rgba(216,191,216,1.0)',\n             lawngreen:'rgba(124,252,0,1.0)',              tomato:'rgba(255,99,71,1.0)',\n          lemonchiffon:'rgba(255,250,205,1.0)',         turquoise:'rgba(64,224,208,1.0)',\n             lightblue:'rgba(173,216,230,1.0)',            violet:'rgba(238,130,238,1.0)',\n            lightcoral:'rgba(240,128,128,1.0)',             wheat:'rgba(245,222,179,1.0)',\n             lightcyan:'rgba(224,255,255,1.0)',             white:'rgba(255,255,255,1.0)',\n  lightgoldenrodyellow:'rgba(250,250,210,1.0)',        whitesmoke:'rgba(245,245,245,1.0)',\n             lightgray:'rgba(211,211,211,1.0)',            yellow:'rgba(255,255,0,1.0)',\n            lightgreen:'rgba(144,238,144,1.0)',       yellowgreen:'rgba(154,205,50,1.0)',\n             lightgrey:'rgba(211,211,211,1.0)',\n  }\n\n/**** HexColor - converts a given color to #rrggbbaa ****/\n\n  export function HexColor (Color:string):string {\n    let lowerColor = Color.toLowerCase()\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n// @ts-ignore TS dislikes indexing with literal keys\n      Color = ColorSet[lowerColor]\n    } // do not return here as color is now in RGBA format\n\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n      return Color + 'FF'\n    }\n\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n      return Color\n    }\n\n    const HexDigit = '0123456789ABCDEF'\n    function dec2hex (Value:number):string {\n      if (Value > 255) { Value = 255 }\n      return HexDigit[Math.trunc(Value / 16)] + HexDigit[Value % 16]\n    }\n\n    const RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i // not perfect\n\n    let Match = RGBPattern.exec(Color)\n    if (Match != null) {\n      return ('#' +\n        dec2hex(parseInt(Match[1],10)) +\n        dec2hex(parseInt(Match[2],10)) +\n        dec2hex(parseInt(Match[3],10)) + 'FF'\n      )\n    }\n\n    const RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([01]?[.][0-9]+|[01])\\)$/i // not perfect\n\n    Match = RGBAPattern.exec(Color)\n    if (Match != null) {\n      return ('#' +\n        dec2hex(parseInt(Match[1],10)) +\n        dec2hex(parseInt(Match[2],10)) +\n        dec2hex(parseInt(Match[3],10)) +\n        dec2hex(parseFloat(Match[4])*255)\n      )\n    }\n\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification')\n  }\n\n/**** RGBAColor - converts a given color to RGBA(r,g,b,a) ****/\n\n  export function RGBAColor (Color:string):string {\n    let lowerColor = Color.toLowerCase()\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n// @ts-ignore TS dislikes indexing with literal keys\n      return ColorSet[lowerColor]             // color is already in RGBA format\n    }\n\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n      return ('rgba(' +\n        parseInt(Color.slice(1,3),16) + ',' +\n        parseInt(Color.slice(3,5),16) + ',' +\n        parseInt(Color.slice(5,7),16) + ', 1' +\n      ')')\n    }\n\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n      return ('rgba(' +\n        parseInt(Color.slice(1,3),16) + ',' +\n        parseInt(Color.slice(3,5),16) + ',' +\n        parseInt(Color.slice(5,7),16) + ',' +\n        (parseInt(Color.slice(7),16)/255) +\n      ')')\n    }\n\n    const RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i //not perfect\n\n    let Match = RGBPattern.exec(Color)\n    if (Match != null) {\n      return Color.slice(0,Color.length-1) + ',1)'\n    }\n\n    const RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([0]?[.][0-9]+|[01])\\)$/i // not perfect\n\n    Match = RGBAPattern.exec(Color)\n    if (Match != null) { return Color }\n\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification')\n  }\n\n/**** shortHexColor - converts a given color into #RRGGBB ****/\n\n  export function shortHexColor (Color:string):string {\n    return HexColor(Color).slice(0,7)\n  }\n"],"names":[],"mappings":"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"}